---
pid_filename: /var/vcap/sys/run/cc_deployment_updater/cc_deployment_updater.pid

index: <%= spec.index %>
name: <%= name %>

logging:
  file: /var/vcap/sys/log/cc_deployment_updater/cc_deployment_updater.log
  syslog: vcap.cloud_controller_ng
  level: "<%= p("cc.logging_level") %>"
  max_retries: <%= p("cc.logging_max_retries") %>

<% db = p("ccdb.databases").find { |db| db["tag"] == "cc" } %>
<% db_role = p("ccdb.roles").find { |role| role["tag"] == "admin" } %>
<%
  database_address = nil
  if_p('ccdb.address') do |host|
    database_address = host
  end.else do
    database_address = link('database').instances[0].address
  end
%>
db: &db
  database: "<%= p("ccdb.db_scheme") == "mysql" ? "mysql2" : p("ccdb.db_scheme") %>://<%= db_role["name"] %>:<%= URI.escape(db_role["password"]) %>@<%= database_address %>:<%= p("ccdb.port") %>/<%= db["name"] %>"
  max_connections: <%= p("ccdb.max_connections") %>
  pool_timeout: <%= p("ccdb.pool_timeout") %>
  log_level: "<%= p("cc.db_logging_level") %>"
  log_db_queries: <%= p("cc.log_db_queries") %>
  ssl_verify_hostname: <%= p("ccdb.ssl_verify_hostname") %>
  read_timeout: <%= p("ccdb.read_timeout") %>
  connection_validation_timeout: <%= p("ccdb.connection_validation_timeout") %>
<% if_p('ccdb.ca_cert') do %>
  ca_cert_path: '/var/vcap/jobs/cc_deployment_updater/config/certs/db_ca.crt'
<% end %>

db_encryption_key: <%= p("cc.db_encryption_key") %>

<% if_p("cc.database_encryption") do %>
database_encryption:
  keys: <%= p("cc.database_encryption.keys", {}).to_json %>
  current_key_label: <%= p("cc.database_encryption.current_key_label").inspect %>
<% end %>

<% if_link("cloud_controller_to_copilot_conn") do |copilot_conn| %>
copilot:
  enabled: <%= link("cloud_controller_internal").p("copilot.enabled") %>
  host: <%= link("cloud_controller_internal").p("copilot.host") %>
  port: <%= copilot_conn.p("listen_port_for_cloud_controller") %>
  client_ca_file: /var/vcap/jobs/cc_deployment_updater/config/certs/copilot_ca.crt
  client_key_file: /var/vcap/jobs/cc_deployment_updater/config/certs/copilot.key
  client_chain_file: /var/vcap/jobs/cc_deployment_updater/config/certs/copilot.crt
<% end %>

diego:
  temporary_oci_buildpack_mode: <%= p("cc.diego.temporary_oci_buildpack_mode", nil) %>
  file_server_url: <%= p("cc.diego.file_server_url") %>
  cc_uploader_url: <%= p("cc.diego.cc_uploader_url") %>
  use_privileged_containers_for_running: <%= p("cc.diego.use_privileged_containers_for_running") %>
  use_privileged_containers_for_staging: <%= p("cc.diego.use_privileged_containers_for_staging") %>
  lifecycle_bundles: <%= p("cc.diego.lifecycle_bundles").to_json %>
  bbs:
    url: <%= p("cc.diego.bbs.url") %>
    key_file: /var/vcap/jobs/cc_deployment_updater/config/certs/mutual_tls.key
    cert_file: /var/vcap/jobs/cc_deployment_updater/config/certs/mutual_tls.crt
    ca_file: /var/vcap/jobs/cc_deployment_updater/config/certs/mutual_tls_ca.crt
  pid_limit: <%= p("cc.diego.pid_limit") %>

default_app_memory: <%= p("cc.default_app_memory") %>
default_app_disk_in_mb: <%= p("cc.default_app_disk_in_mb") %>
maximum_app_disk_in_mb: <%= p("cc.maximum_app_disk_in_mb") %>
instance_file_descriptor_limit: <%= p("cc.instance_file_descriptor_limit") %>

deployment_updater:
  update_frequency_in_seconds: <%= p("deployment_updater.update_frequency_in_seconds") %>
